---
name: Testing and publishing

on:
  pull_request: {}
  push:
    paths-ignore:
    - '*.md'
    - '**/*.md'
    branches:
    - master
    tags:
    - "*"

env:
  GOLANG_VERSION: "1.16"

jobs:
  doc:
    name: Check doc freshness
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Golang
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOLANG_VERSION }}
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Run doc generation
      run: |
        make doc
    - name: Check if working tree is dirty
      run: |
        if [[ $(git diff --stat) != '' ]]; then
          git diff
          echo 'run `make doc` or `make prepare` and commit changes'
          exit 1
        fi

  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.42
        github-token: ${{ secrets.GITHUB_TOKEN }}
        args: "--fix=false"

  tidy:
    name: Mod tidy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Golang
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOLANG_VERSION }}
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Run tidy
      run: |
        make tidy
    - name: Check if working tree is dirty
      run: |
        if [[ $(git diff --stat) != '' ]]; then
          git diff
          echo 'run `make tidy` or `make prepare` and commit changes'
          exit 1
        fi

  test:
    name: Testing
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Golang
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOLANG_VERSION }}
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Run tests
      run: |
        make test-unit
  
  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    needs:
    - doc
    - lint
    - tidy
    - test
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Golang
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOLANG_VERSION }}
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Setup Kubernetes
      uses: engineerd/setup-kind@v0.5.0
      with:
        image: kindest/node:v1.21.1
    - name: Run tests
      run: |
        make test-integration

  publish-dumper:
    name: Publishing dumper docker image
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    needs:
    - integration-tests
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Golang
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOLANG_VERSION }}
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Build dumper
      working-directory: ./dumper
      run: |
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -v .
    - name: Docker build and push
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        repository: dodopizza/kubectl-shovel-dumper
        dockerfile: ./dumper/Dockerfile
        path: ./dumper
        tag_with_ref: true
        tags: latest

  publish-cli:
    name: Publishing cli
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    needs:
    - integration-tests
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Golang
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOLANG_VERSION }}
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        version: v0.138.0
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Update new version in krew-index
      if: ${{ !contains(github.ref, 'beta') }}
      uses: rajatjindal/krew-release-bot@v0.0.38
