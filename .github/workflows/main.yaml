---
name: Testing and publishing

on:
  pull_request: {}
  push:
    branches:
    - master
    tags:
    - "*"

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Lint
      uses: golangci/golangci-lint-action@v1.2.1
      with:
        version: v1.27
        github-token: ${{ secrets.GITHUB_TOKEN }}
        args: "--tests=false"

  format:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Format
      uses: golangci/golangci-lint-action@v1.2.1
      with:
        version: v1.27
        github-token: ${{ secrets.GITHUB_TOKEN }}
        args: "--disable-all -E golint,goimports,misspell"

  test:
    name: Testing
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Unshallow
      run: git fetch --prune --unshallow
    - uses: actions/setup-go@v1
      with:
        go-version: "1.15"
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Install dependencies
      run: |
        go mod download
    - name: Run tests
      run: |
        go test -v -cover ./...
  
  publish-dumper:
    name: Publishing dumper docker image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
    - lint
    - format
    - test
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-go@v1
      with:
        go-version: "1.15"
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Install dependencies
      run: |
        go mod download
    - name: Build dumper
      working-directory: ./dumper
      run: |
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -v .
    - name: Login to ACR
      uses: docker/login-action@v1
      with:
        registry: dodoreg.azurecr.io
        username: ${{ secrets.DODOREG_AZURECR_USERNAME }}
        password: ${{ secrets.DODOREG_AZURECR_PASSWORD }}
    - name: Docker build and push
      uses: docker/build-push-action@v2
      with:
        file: ./dumper/Dockerfile
        context: ./dumper
        push: true
        tags: dodoreg.azurecr.io/dumper:latest

  publish-cli:
    name: Publishing cli
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    needs:
    - lint
    - format
    - test
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Unshallow
      run: git fetch --prune --unshallow
    - uses: actions/setup-go@v1
      with:
        go-version: "1.15"
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Install dependencies
      run: |
        go mod download
    - name: Run GoReleaser
      if: startsWith(github.ref, 'refs/tags')
      uses: goreleaser/goreleaser-action@v2.0.2
      with:
        version: v0.138.0
        args: release --rm-dist
        workdir: cli
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
